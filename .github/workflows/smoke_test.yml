name: Check if it's possible to store and restore

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      minio:
        image: fclairamb/minio-github-actions
        ports:
          - 9000:9000
    env:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: eu-central-2
      LIBSQL_BOTTOMLESS_BUCKET: bottomless
      LIBSQL_BOTTOMLESS_ENDPOINT: http://localhost:9000
    steps:
    - uses: actions/checkout@v3

    - name: set up mc
      run: curl https://dl.min.io/client/mc/release/linux-amd64/mc -o mc && chmod +x mc

    - name: set up the bucket
      run: ./mc alias set minio http://127.0.0.1:9000 $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY && ./mc mb minio/bottomless

    - name: get submodules
      run: git submodule update --init --recursive
      
    - name: Run smoke test
      run: make test

    - name: Run restore test
      run: ( cd test; ../libsql/libsql < restore_test.sql )

    - name: Remove the database
      run: rm -f test/test.db

    - name: Run restore test again
      run: ( cd test; ../libsql/libsql < restore_test.sql )

    - name: Make offline changes to the database
      run: ./libsql/libsql test/test.db <<< "insert into test values (997);"

    - name: Run restore test yet again
      run: ( cd test; ../libsql/libsql < restore_test.sql )

    - name: List generations with CLI
      run: cargo run -- -e http://localhost:9000 -d test.db ls -v

    - name: Restore the database with CLI
      run: cargo run -- -e http://localhost:9000 -d test.db restore

    - name: Verify the restored database
      run: ./libsql/libsql test.db <<< "SELECT * FROM test;"
